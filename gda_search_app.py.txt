import streamlit as st
import os
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

st.set_page_config(page_title="GDA Search", layout="wide")

st.title("🔍 GDA PDF Text Search")
st.markdown("Search extracted PDF text in **Hindi or English**.")

uploaded_file = st.file_uploader("📄 Upload your .txt file", type="txt")

if uploaded_file:
    text = uploaded_file.read().decode("utf-8")
    documents = text.split("\n\n")  # split into paragraphs

    query = st.text_input("Enter your search query:")
    
    if query:
        # Vectorize text
        vectorizer = TfidfVectorizer()
        doc_vectors = vectorizer.fit_transform(documents)
        query_vec = vectorizer.transform([query])
        
        # Similarity search
        scores = cosine_similarity(query_vec, doc_vectors)[0]
        top_indices = scores.argsort()[::-1][:5]  # Top 5 matches

        st.subheader("📌 Top Results")
        for i in top_indices:
            if scores[i] > 0.05:
                st.markdown(f"**Score:** {scores[i]:.2f}")
                st.write(documents[i])
                st.markdown("---")
        if all(score <= 0.05 for score in scores):
            st.warning("❌ No relevant matches found.")
